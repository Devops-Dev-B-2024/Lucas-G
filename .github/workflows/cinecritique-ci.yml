name: CineCritique CI Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - main 
      - TP3_DOCKER
  pull_request:
    branches:
      - main
      - TP3_DOCKER

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: List directory structure
      run: ls -R        

    - name: Change to app directory
      run: cd TP_DOCKER_3/CineCritique        

    - name: Install dependencies
      run: npm install
      working-directory: TP_DOCKER_3/CineCritique      
      
    - name: Run tests
      run: npx jest
      working-directory: TP_DOCKER_3/CineCritique            
      
    - name: Run ESLint
      run: npx eslint .
      working-directory: TP_DOCKER_3/CineCritique
      
  security-scan:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install
      working-directory: TP_DOCKER_3/CineCritique
      
    - name: Run security audit
      run: npm audit
      working-directory: TP_DOCKER_3/CineCritique
      
  docker-publish:
    needs: security-scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: dayql
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: dayql/cinecritique:latest
